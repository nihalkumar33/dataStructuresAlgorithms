#include<stdio.h>
#include<stdlib.h>

int * splitArray(int * array, int start, int end) {
    int j=0;
    int i=start;
    int * splittedArray = (int *)malloc(sizeof(int) * (start + end));

    while (i <= end) {
        splittedArray[j] = array[i];
        j++; i++;
    }
    return splittedArray;
}

int * mergeArray(int array1[], int length1, int array2[], int length2) {
    int i=0, j=0, k=0;
    int * mergedArray = (int *)malloc(sizeof(int) * (length1 + length2));
    
    for (int i=0; i<(length1 + length2); i++) {
        mergedArray[i] = 0;
    }

    while (k < (length1 + length2)) {
        if (i < length1 && j < length2) {
            if (array1[i] < array2[j]) {
                mergedArray[k] = array1[i];
                i++; k++;
            }
    
            else if (array1[i] > array2[j]) {
                mergedArray[k] = array2[j];
                k++; j++;
            }
    
            else {
                mergedArray[k] = array1[i];
                k++; i++; j++;
            }
        }
        
        else if (i >= length1) {
            mergedArray[k] = array2[j];
            k++; j++;
        }
        
        else {
            mergedArray[k] = array1[i];
            k++; i++;
        }
    }
    
    return mergedArray;
}

int * mergeSort(int * array, int start, int end) {
    int * returnArray;
    if (start < end) {
        int mid = (start + end)/2;
        int * array1 = splitArray(array, start, mid);
        int * array2 = splitArray(array, mid+1, end);
        
        printf("Array1: ");
        for (int i=0; i<(mid - start + 1); i++) 
            printf("%d ", array1[i]);
        
        printf("\n");
        printf("Array2: ");
        for (int i=0; i<(end - mid); i++) 
            printf("%d ", array2[i]);
        printf("\n \n");
     
        returnArray = mergeArray(mergeSort(array1, 0, (mid - start)), (mid - start + 1), mergeSort(array2, 0, (end - mid - 1)), (end - mid));
    }
    return returnArray;
}

int main() {
    int array[10] = {1, 12, 3, 0, 4, 9, -1, 8, 10, -10};
    int start = 0;
    int mid = 4;
    int end = 9;
    int * array1 = splitArray(array, start, mid);
    int * array2 = splitArray(array, mid+1, end);

    int * sortedArray = mergeSort(array, 0, 9);
    
    printf("\n");
    for (int i=0; i<(10); i++) {
        printf("%d \n", sortedArray[i]);
    }
    
    return 0;
}
